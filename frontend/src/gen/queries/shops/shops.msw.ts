/**
 * Generated by orval v6.12.1 🍺
 * Do not edit manually.
 * dab-api
 * 家計簿アプリ用API
 * OpenAPI spec version: 0.0.1
 */
import { rest } from "msw";
import { faker } from "@faker-js/faker";

export const getGetShopsMock = () => ({
  shops: faker.helpers.arrayElement([
    Array.from(
      { length: faker.datatype.number({ min: 1, max: 10 }) },
      (_, i) => i + 1
    ).map(() => ({
      shop_id: faker.helpers.arrayElement([
        faker.datatype.number({ min: undefined, max: undefined }),
        undefined,
      ]),
      shop_name: faker.helpers.arrayElement([faker.random.word(), undefined]),
      modified_at: faker.helpers.arrayElement([faker.random.word(), undefined]),
      created_at: faker.helpers.arrayElement([faker.random.word(), undefined]),
    })),
    undefined,
  ]),
});

export const getPostShopsMock = () => ({
  shop_id: faker.helpers.arrayElement([
    faker.datatype.number({ min: undefined, max: undefined }),
    undefined,
  ]),
  shop_name: faker.helpers.arrayElement([faker.random.word(), undefined]),
  modified_at: faker.helpers.arrayElement([faker.random.word(), undefined]),
  created_at: faker.helpers.arrayElement([faker.random.word(), undefined]),
});

export const getPatchShopsShopIdMock = () => ({
  shop_id: faker.helpers.arrayElement([
    faker.datatype.number({ min: undefined, max: undefined }),
    undefined,
  ]),
  shop_name: faker.helpers.arrayElement([faker.random.word(), undefined]),
  modified_at: faker.helpers.arrayElement([faker.random.word(), undefined]),
  created_at: faker.helpers.arrayElement([faker.random.word(), undefined]),
});

export const getShopsMSW = () => [
  rest.get("*/shops", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getGetShopsMock())
    );
  }),
  rest.post("*/shops", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getPostShopsMock())
    );
  }),
  rest.patch("*/shops/:shopId", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getPatchShopsShopIdMock())
    );
  }),
];
