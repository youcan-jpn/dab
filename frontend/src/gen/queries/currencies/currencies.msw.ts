/**
 * Generated by orval v6.12.1 🍺
 * Do not edit manually.
 * dab-api
 * 家計簿アプリ用API
 * OpenAPI spec version: 0.0.1
 */
import { rest } from "msw";
import { faker } from "@faker-js/faker";

export const getGetCurrenciesMock = () => ({
  currencies: faker.helpers.arrayElement([
    Array.from(
      { length: faker.datatype.number({ min: 1, max: 10 }) },
      (_, i) => i + 1
    ).map(() => ({
      currency_id: faker.helpers.arrayElement([
        faker.datatype.number({ min: undefined, max: undefined }),
        undefined,
      ]),
      currency_name: faker.helpers.arrayElement([
        faker.random.word(),
        undefined,
      ]),
      in_yen: faker.helpers.arrayElement([
        faker.datatype.number({ min: undefined, max: undefined }),
        undefined,
      ]),
      modified_at: faker.helpers.arrayElement([faker.random.word(), undefined]),
      created_at: faker.helpers.arrayElement([faker.random.word(), undefined]),
    })),
    undefined,
  ]),
});

export const getPostCurrenciesMock = () => ({
  currency_id: faker.helpers.arrayElement([
    faker.datatype.number({ min: undefined, max: undefined }),
    undefined,
  ]),
  currency_name: faker.helpers.arrayElement([faker.random.word(), undefined]),
  in_yen: faker.helpers.arrayElement([
    faker.datatype.number({ min: undefined, max: undefined }),
    undefined,
  ]),
  modified_at: faker.helpers.arrayElement([faker.random.word(), undefined]),
  created_at: faker.helpers.arrayElement([faker.random.word(), undefined]),
});

export const getPatchCurrenciesCurrencyIdMock = () => ({
  currency_id: faker.helpers.arrayElement([
    faker.datatype.number({ min: undefined, max: undefined }),
    undefined,
  ]),
  currency_name: faker.helpers.arrayElement([faker.random.word(), undefined]),
  in_yen: faker.helpers.arrayElement([
    faker.datatype.number({ min: undefined, max: undefined }),
    undefined,
  ]),
  modified_at: faker.helpers.arrayElement([faker.random.word(), undefined]),
  created_at: faker.helpers.arrayElement([faker.random.word(), undefined]),
});

export const getCurrenciesMSW = () => [
  rest.get("*/currencies", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getGetCurrenciesMock())
    );
  }),
  rest.post("*/currencies", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getPostCurrenciesMock())
    );
  }),
  rest.patch("*/currencies/:currencyId", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getPatchCurrenciesCurrencyIdMock())
    );
  }),
];
