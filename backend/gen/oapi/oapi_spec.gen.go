// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
