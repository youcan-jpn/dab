// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
