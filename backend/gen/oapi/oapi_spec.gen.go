// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"3f8CAAD//3ssTS/bIAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
